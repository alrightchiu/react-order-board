{"version":3,"sources":["features/order/orderSlice.ts","app/rootReducer.ts","api/orders.ts","app/rootEpic.ts","utils/debounce.ts","app/statePersistent.ts","app/store.ts","features/order/NewOrderButton.tsx","features/order/OrderItem.tsx","features/order/OrderList.tsx","features/order/OrderFormModal/Overlay.tsx","features/order/OrderFormModal/Container.tsx","features/order/OrderFormModal/ErrorMessage.tsx","features/order/OrderFormModal/fields.ts","features/order/OrderFormModal/buttons.ts","features/order/OrderFormModal/OrderForm.tsx","features/order/OrderFormModal/index.tsx","app/App.tsx","index.tsx"],"names":["addOrder","createAction","deleteOrder","updateOrder","apiError","orderSlice","createSlice","name","initialState","list","reducers","addOrderFulfilled","state","orderItem","payload","deleteOrderFulfilled","filter","id","updateOrderFulfilled","orderIdx","findIndex","slice","reducer","actions","rootReducer","combineReducers","order","orderReducer","orderResourceMap","Map","postOrder","a","async","orderID","v4","orderResource","creationDate","Date","getTime","modificationDate","set","patchOrder","get","modifiedOrderResource","delete","dependencies","postOrderAPI","from","deleteOrderAPI","patchOrderAPI","rootEpic","combineEpics","action$","_state$","pipe","match","mergeMap","action","map","catchError","error","of","debounce","func","wait","timeoutID","args","clearTimeout","setTimeout","save","localStorage","setItem","JSON","stringify","epicMiddleware","createEpicMiddleware","store","configureStore","preloadedState","persistentState","parse","getItem","Object","keys","length","load","price","note","middleware","getDefaultMiddleware","getState","next","dispatchedAction","nextState","run","glowingKeyframes","keyframes","GlowingWrapper","styled","div","props","isVisible","Button","PureNewOrderButton","isGlowingVisible","onClick","data-testid","orderList","useSelector","history","useHistory","push","Wrapper","Row","Column","percent","TextWrapper","span","PureOrderItem","index","toLocaleString","Container","PureOrderList","OrderItem","key","Overlay","shakeKeyframes","shakeAnimation","css","isShakeModal","ErrorMessage","p","inputStyles","Input","input","isError","TextArea","textarea","buttonStyles","CancelButton","attrs","type","DeleteButton","SubmitButton","selectOrderByID","createSelector","_state","find","Control","PureOrderForm","isDeletable","onCancel","onDelete","onSubmit","onUserInteractedChange","useForm","mode","makeSubmitHandler","handleSubmit","register","errors","dirty","formState","useEffect","placeholder","autoComplete","defaultValue","onChange","target","value","trimStart","onBlur","trim","ref","required","message","undefined","min","max","rows","useParams","newOrderMatch","useRouteMatch","path","handleClose","dispatch","useDispatch","Number","to","TopRow","PureOrderFormModal","isUnSafeExit","onOverlayClick","event","stopPropagation","OrderForm","useState","isUserInteracted","setIsUserInteracted","setIsUnSafeExit","isMountedRef","useRef","rootElemRef","document","createElement","rootElem","current","body","style","overflowY","position","appendChild","removeChild","setIsUnSafeExitFalse","useCallback","createPortal","App","NewOrderButton","OrderList","OrderFormModal","GlobalStyle","createGlobalStyle","reset","render","basename","getElementById"],"mappings":"0UAyBaA,EAAWC,YAEtB,kBAEWC,EAAcD,YAA8B,qBAE5CE,EAAcF,YAEzB,qBAEWG,EAAWH,YAAoB,kBAEtCI,EAAaC,YAAY,CAC7BC,KAAM,QACNC,aAAc,CAAEC,KAAM,IACtBC,SAAU,CACRC,kBAAmB,SACjBC,EADiB,GAGb,IADOC,EACR,EADDC,QAEML,EAASG,EAATH,KAER,OAAO,eAAKG,EAAZ,CAAmBH,KAAK,GAAD,mBAAMA,GAAN,CAAYI,OAGrCE,qBAAsB,SACpBH,EADoB,GAGhB,IADFE,EACC,EADDA,QAEML,EAASG,EAATH,KAER,OAAO,eAAKG,EAAZ,CAAmBH,KAAMA,EAAKO,QAAO,qBAAGC,KAAgBH,QAG1DI,qBAAsB,SACpBN,EADoB,GAGhB,IADOC,EACR,EADDC,QAEML,EAASG,EAATH,KACFU,EAAWV,EAAKW,WAAU,gBAAGH,EAAH,EAAGA,GAAH,OAAYJ,EAAUI,KAAOA,KAE7D,OAAO,eACFL,EADL,CAEEH,KAAK,GAAD,mBACCA,EAAKY,MAAM,EAAGF,IADf,CAEFN,GAFE,YAGCJ,EAAKY,MAAMF,EAAW,WAOpBG,EAAYjB,EAAZiB,Q,EAKXjB,EAAWkB,QAHbZ,E,EAAAA,kBACAI,E,EAAAA,qBACAG,E,EAAAA,qBC3EaM,EAJKC,0BAAgB,CAAEC,MAAOC,I,wCCQvCC,EAAmB,IAAIC,IAEhBC,EAAY,SACvBJ,GADuB,iBAAAK,EAAAC,OAAA,uDAGjBC,EAAUC,eACVC,EAJiB,eAKlBT,EALkB,CAMrBT,GAAIgB,EACJG,cAAc,IAAIC,MAAOC,UACzBC,kBAAkB,IAAIF,MAAOC,YAG/BV,EAAiBY,IAAIP,EAASE,GAXP,kBAahBA,GAbgB,sCAyBZM,EAAa,SACxBf,GADwB,mBAAAK,EAAAC,OAAA,uDAGZC,EAAYP,EAAhBT,GACFkB,EAAgBP,EAAiBc,IAAIT,GACrCU,EALkB,eAMnBR,EANmB,GAOnBT,EAPmB,CAQtBa,kBAAkB,IAAIF,MAAOC,YAG/BV,EAAiBY,IAAIP,EAASU,GAXN,kBAajBA,GAbiB,sCAoBbzC,EAAc,SAAO+B,GAAP,SAAAF,EAAAC,OAAA,gDACzBJ,EAAiBgB,OAAOX,GADC,sCC/CdY,EAAe,CAC1BC,aAAc,kBACZC,YAAKjB,EAAS,WAAT,eACPkB,eAAgB,kBACdD,YAAK7C,EAAW,WAAX,eACP+C,cAAe,kBACbF,YAAKN,EAAU,WAAV,gBAKMS,EAbEC,aHiFb,SAACC,EAASC,EAAV,OAAqBP,EAArB,EAAqBA,aAArB,OACFM,EAAQE,KACNtC,YAAOhB,EAASuD,OAChBC,aAAS,SAAAC,GAAM,OACbX,EAAaW,EAAO3C,SAASwC,KAC3BI,YAAI/C,GACJgD,aAAW,SAAAC,GAAK,OAAIC,YAAGzD,EAASwD,eAUpC,SAACR,EAASC,EAAV,OAAqBL,EAArB,EAAqBA,eAArB,OACFI,EAAQE,KACNtC,YAAOd,EAAYqD,OACnBC,aAAS,SAAAC,GAAM,OACbT,EAAeS,EAAO3C,SAASwC,KAC7BI,aAAI,kBAAM3C,EAAqB0C,EAAO3C,YACtC6C,aAAW,SAAAC,GAAK,OAAIC,YAAGzD,EAASwD,eAUpC,SAACR,EAASC,EAAV,OAAqBJ,EAArB,EAAqBA,cAArB,OACFG,EAAQE,KACNtC,YAAOb,EAAYoD,OACnBC,aAAS,SAAAC,GAAM,OACbR,EAAcQ,EAAO3C,SAASwC,KAC5BI,YAAIxC,GACJyC,aAAW,SAAAC,GAAK,OAAIC,YAAGzD,EAASwD,eIvHzBE,EATE,SAAoCC,GAAyB,IAAhBC,EAAe,uDAAR,IAC/DC,EAAY,EAEhB,OAAQ,WAA6B,IAAD,uBAAxBC,EAAwB,yBAAxBA,EAAwB,gBAClCC,aAAaF,GACbA,EAAYG,YAAW,kBAAML,EAAI,WAAJ,EAAQG,KAAOF,KCS1CK,EAAOP,GAAS,SAAClD,GACrB0D,aAAaC,QAZG,qBAYgBC,KAAKC,UAAU7D,MAC9C,KCqBG8D,EAAiBC,YAAqB,CAAE9B,iBAExC+B,EAAQC,YAAe,CAC3BvD,QAASE,EACTsD,eDpCkB,SAACA,GACnB,IAAMC,EAA0BP,KAAKQ,MACnCV,aAAaW,QAJC,uBAIqB,MAGrC,OAA4C,IAAxCC,OAAOC,KAAKJ,GAAiBK,OAAqBN,EAC/CC,EC8BSM,CAnCK,CACrB3D,MAAO,CACLjB,KAAM,CACJ,CACEQ,GAAI,OACJmB,aAAc,OACdG,iBAAkB,OAClBhC,KAAM,eACN+E,MAAO,IACPC,KAAM,uBAER,CACEtE,GAAI,OACJmB,aAAc,OACdG,iBAAkB,OAClBhC,KAAM,eACN+E,MAAO,IACPC,KAAM,uBAER,CACEtE,GAAI,OACJmB,aAAc,OACdG,iBAAkB,OAClBhC,KAAM,eACN+E,MAAO,IACPC,KAAM,2BAWZC,WAAW,GAAD,mBACLC,eADK,CAERf,ED1B8C,SAAC,GAAD,IAChDgB,EADgD,EAChDA,SADgD,OAE5C,SAAAC,GAAI,OAAI,SAAAlC,GACZ,IAAMmC,EAAmBD,EAAKlC,GACxBoC,EAAYH,IAIlB,OAFArB,EAAKwB,GAEED,SCuBTlB,EAAeoB,IAAI5C,GAEJ0B,Q,63CC7Cf,IAAMmB,GAAmBC,oBAAH,KAYhBC,GAAiBC,UAAOC,IAAV,KAmCL,SAAAC,GAAK,OAAKA,EAAMC,UAAY,EAAI,IAE9BN,IAIXO,GAASJ,UAAOC,IAAV,KAyBCI,GAAgC,SAAC,GAAD,IAC3CC,EAD2C,EAC3CA,iBACAC,EAF2C,EAE3CA,QAF2C,OAI3C,kBAACR,GAAD,CAAgBI,UAAWG,GACzB,kBAACF,GAAD,CAAQI,cAAY,SAASD,QAASA,GAAtC,eAMW,cACb,IAAME,EAAYC,aAAY,SAAChG,GAAD,OAAsBA,EAAMc,MAAMjB,QAE1DoG,EAAUC,cAKhB,OACE,kBAAC,GAAD,CACEN,iBAAuC,IAArBG,EAAUvB,OAC5BqB,QAPsB,WACxBI,EAAQE,KAAK,Y,8xBChGjB,IAAMC,GAAUd,UAAOC,IAAV,MAUPc,GAAMf,UAAOC,IAAV,MAOHe,GAAShB,UAAOC,IAAV,MAGE,SAAAC,GAAK,OAAIA,EAAMe,WAWvBC,GAAclB,UAAOmB,KAAV,MAYJC,GAAwC,SAAC,GAAD,IACnDC,EADmD,EACnDA,MACAtG,EAFmD,EAEnDA,GACAV,EAHmD,EAGnDA,KACA+E,EAJmD,EAInDA,MACAC,EALmD,EAKnDA,KACAkB,EANmD,EAMnDA,QANmD,OAQnD,oCACE,kBAACO,GAAD,KACE,kBAACC,GAAD,CAAKP,cAAY,MAAMD,QAAS,kBAAMA,EAAQxF,KAC5C,kBAACiG,GAAD,CAAQC,QAAQ,OACd,kBAACC,GAAD,CAAaV,cAAY,MAAMa,EAAQ,IAEzC,kBAACL,GAAD,CAAQC,QAAQ,OACd,kBAACC,GAAD,CAAaV,cAAY,QAAQnG,IAEnC,kBAAC2G,GAAD,CAAQC,QAAQ,OACd,kBAACC,GAAD,CAAaV,cAAY,SACtBpB,EAAMkC,mBAGX,kBAACN,GAAD,CAAQC,QAAQ,OACd,kBAACC,GAAD,CAAaV,cAAY,QAAQnB,QAe3B,YAAAa,GACd,IAAMS,EAAUC,cAKhB,OAAO,kBAAC,GAAD,iBAAmBV,EAAnB,CAA0BK,QAJV,SAACxF,GACtB4F,EAAQE,KAAR,iBAAuB9F,S,2GClF3B,IAAMwG,GAAYvB,UAAOC,IAAV,MAcFuB,GAA2B,SAAC,GAAD,IAAGf,EAAH,EAAGA,UAAH,OACtC,kBAACc,GAAD,CAAWf,cAAY,aACpBC,EAAUjD,KAAI,WAA4B6D,GAA5B,IAAGtG,EAAH,EAAGA,GAAIV,EAAP,EAAOA,KAAM+E,EAAb,EAAaA,MAAOC,EAApB,EAAoBA,KAApB,OACb,kBAACoC,GAAD,CACEC,IAAK3G,EACLsG,MAAOA,EACPtG,GAAIA,EACJV,KAAMA,EACN+E,MAAOA,EACPC,KAAMA,SAMC,cACb,IAAMoB,EAAYC,aAAY,SAAChG,GAAD,OAAsBA,EAAMc,MAAMjB,QAEhE,OAAO,kBAAC,GAAD,CAAekG,UAAWA,K,8RCpCnC,IAgBekB,GAhBC3B,UAAOC,IAAV,M,+vBCAb,IAAM2B,GAAiB9B,oBAAH,MAed+B,GAAiBC,cAAH,KACLF,IAmBAL,GAbGvB,UAAOC,IAAV,MAUX,SAAAC,GAAK,OAAKA,EAAM6B,aAAeF,GAAiB,M,gHChCpD,IAMeG,GANMhC,UAAOiC,EAAV,M,uzBCAlB,IAAMC,GAAcJ,cAAH,MAmBJK,GAAQnC,UAAOoC,MAAV,KACdF,IASA,SAAAhC,GAAK,OAAKA,EAAMmC,QAAU,yBAA2B,MAG5CC,GAAWtC,UAAOuC,SAAV,KACjBL,I,wjDCjCJ,IAAMM,GAAeV,cAAH,MAqBLW,GAAezC,UAAOoC,MAAMM,MAAM,CAAEC,KAAM,UAA3B3C,CAAH,KACrBwC,IAgBSI,GAAe5C,UAAOoC,MAAMM,MAAM,CAAEC,KAAM,UAA3B3C,CAAH,KACrBwC,IAgBSK,GAAe7C,UAAOoC,MAAMM,MAAM,CAAEC,KAAM,UAA3B3C,CAAH,KACrBwC,I,4QCrCJ,IAAMM,GfiHJC,YACE,CACE,SAACrI,GAAD,OAAsBA,EAAMc,MAAMjB,MAClC,SAACyI,EAAmBjI,GAApB,OAAmCA,KAErC,SAAC0F,EAAW1F,GAAZ,OAAmB0F,EAAUwC,MAAK,SAAAzH,GAAK,OAAIA,EAAMT,KAAOA,QepHtDgG,GAAMf,UAAOC,IAAV,MAMHiD,GAAUlD,UAAOC,IAAV,MAuBAkD,GAAwC,SAAC,GAS/C,IARL9I,EAQI,EARJA,KACA+E,EAOI,EAPJA,MACAC,EAMI,EANJA,KACA+D,EAKI,EALJA,YACAC,EAII,EAJJA,SACAC,EAGI,EAHJA,SACAC,EAEI,EAFJA,SACAC,EACI,EADJA,uBACI,EAMAC,aAAoB,CAAEC,KAAM,WAJhBC,EAFZ,EAEFC,aACAC,EAHE,EAGFA,SACAC,EAJE,EAIFA,OACaC,EALX,EAKFC,UAAaD,MAGfE,qBAAU,WACRT,EAAuBO,KACtB,CAACP,EAAwBO,IAE5B,IAAMH,EAAeD,EAAkBJ,GAEvC,OACE,0BAAMA,SAAUK,GACd,kBAAC,GAAD,KACE,kBAACzB,GAAD,CACE3B,cAAY,OACZnG,KAAK,OACL6J,YAAY,2BACZC,aAAa,MACbC,aAAc/J,EACdgK,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAiBA,EAAOC,MAAQD,EAAOC,MAAMC,aACvDC,OAAQ,gBAAGH,EAAH,EAAGA,OAAH,OAAiBA,EAAOC,MAAQD,EAAOC,MAAMG,QACrDC,IAAKd,EAAS,CAAEe,SAAU,+CAC1BvC,UAAWyB,EAAOzJ,OAEnByJ,EAAOzJ,MAAQ,kBAAC,GAAD,KAAeyJ,EAAOzJ,KAAKwK,UAG7C,kBAAC,GAAD,KACE,kBAAC1C,GAAD,CACE3B,cAAY,QACZnG,KAAK,QACL6J,YAAY,2BACZvB,KAAK,SACLyB,aAAchF,QAAS0F,EACvBH,IAAKd,EAAS,CACZe,SAAU,6CACVG,IAAK,CAAER,MAAO,EAAGM,QAAS,uDAC1BG,IAAK,CACHT,MAAO,UACPM,QAAS,mEAGbxC,UAAWyB,EAAO1E,QAEnB0E,EAAO1E,OAAS,kBAAC,GAAD,KAAe0E,EAAO1E,MAAMyF,UAG/C,kBAAC,GAAD,KACE,kBAACvC,GAAD,CACE9B,cAAY,OACZnG,KAAK,OACL6J,YAAY,eACZe,KAAM,EACNb,aAAc/E,EACdgF,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAiBA,EAAOC,MAAQD,EAAOC,MAAMC,aACvDC,OAAQ,gBAAGH,EAAH,EAAGA,OAAH,OAAiBA,EAAOC,MAAQD,EAAOC,MAAMG,QACrDC,IAAKd,KAIT,kBAACX,GAAD,KACE,kBAACT,GAAD,CAAcjC,cAAY,SAAS+D,MAAM,eAAKhE,QAAS8C,IACtDD,GACC,kBAACR,GAAD,CAAcpC,cAAY,SAAS+D,MAAM,eAAKhE,QAAS+C,IAEzD,kBAACT,GAAD,CAAcrC,cAAY,SAAS+D,MAAM,oBAUjC,eAAiC,IAA9Bf,EAA6B,EAA7BA,uBACTzH,EAAYmJ,cAAZnJ,QACFoJ,EAAgBC,YAAc,CAAEC,KAAM,SAEtC7J,EAAQkF,aAAY,SAAChG,GAAD,OACxBoI,GAAgBpI,EAAOqB,GAAW,OAG9B4E,EAAUC,cACV0E,EAAc,WAClB3E,EAAQE,KAAK,MAGT0E,EAAWC,cAb6B,EA8BhBhK,GAAS,CAAEnB,KAAM,GAAI+E,MAAO,EAAGC,KAAM,IAA3DhF,EA9BsC,EA8BtCA,KAAM+E,EA9BgC,EA8BhCA,MAAOC,EA9ByB,EA8BzBA,KAErB,OAAK8F,GAAkB3J,EAKrB,kBAAC,GAAD,CACEnB,KAAMA,EACN+E,MAAOA,EACPC,KAAMA,EACN+D,cAAerH,EACfuH,SAnBiB,WACfvH,GACFwJ,EAASvL,EAAY+B,IAEvBuJ,KAgBEjC,SAAUiC,EACV/B,SA9BiB,SAAC,GAA4C,IAA1ClJ,EAAyC,EAAzCA,KAAM+E,EAAmC,EAAnCA,MAAmC,IAA5BC,YAA4B,MAArB,GAAqB,EAE7DkG,EADExJ,EACO9B,EAAY,CAAEc,GAAIgB,EAAS1B,OAAM+E,MAAOqG,OAAOrG,GAAQC,SAEvDvF,EAAS,CAAEO,OAAM+E,MAAOqG,OAAOrG,GAAQC,UAElDiG,KAyBE9B,uBAAwBA,IAZnB,kBAAC,IAAD,CAAUkC,GAAG,O,wJCnKxB,IAAMC,GAAS3F,UAAOC,IAAV,MAcC2F,GAAgC,SAAC,GAAD,IAC3CC,EAD2C,EAC3CA,aACAC,EAF2C,EAE3CA,eACAtC,EAH2C,EAG3CA,uBAH2C,OAK3C,kBAAC,GAAD,CAAShD,cAAY,UAAUD,QAASuF,GACtC,kBAAC,GAAD,CACEvF,QAAS,SAAAwF,GAAK,OAAIA,EAAMC,mBACxBjE,aAAc8D,GAEd,kBAACF,GAAD,KACGE,GACC,kBAAC,GAAD,oGAGJ,kBAACI,GAAD,CAAWzC,uBAAwBA,OAK1B,cAAO,IAAD,EAC6B0C,oBAAS,GADtC,oBACZC,EADY,KACMC,EADN,OAEqBF,oBAAS,GAF9B,oBAEZL,EAFY,KAEEQ,EAFF,KAIbC,EAAeC,kBAAO,GACtBC,EAAcD,iBAAOE,SAASC,cAAc,QAClDzC,qBAAU,WAAO,IACE0C,EAAaH,EAAtBI,QADM,EAEkBH,SAASI,KAAKC,MAAtCC,EAFM,EAENA,UAAWC,EAFL,EAEKA,SAOnB,OALAV,EAAaM,SAAU,EACvBH,SAASI,KAAKI,YAAYN,GAC1BF,SAASI,KAAKC,MAAMC,UAAY,SAChCN,SAASI,KAAKC,MAAME,SAAW,QAExB,WACLV,EAAaM,SAAU,EACvBH,SAASI,KAAKK,YAAYP,GAC1BF,SAASI,KAAKC,MAAMC,UAAYA,EAChCN,SAASI,KAAKC,MAAME,SAAWA,KAEhC,IAEH,IAAMrG,EAAUC,cAKVuG,EAAuBC,sBAC3BxJ,GAAS,WACH0I,EAAaM,SAASP,GAAgB,KACzC,KACH,IAYF,OAAOgB,uBACL,kBAAC,GAAD,CACExB,aAAcA,EACdC,eAZuB,WACrBK,GACFE,GAAgB,GAChBc,KAbFxG,EAAQE,KAAK,MAuBX2C,uBAAwB4C,IAE1BI,EAAYI,U,oICvFhB,IAAM9F,GAAUd,UAAOC,IAAV,MAmBEqH,GAbC,kBACd,kBAAC,GAAD,KACE,kBAACC,GAAD,MACA,kBAACC,GAAD,MACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOnC,KAAM,CAAC,OAAQ,oBACpB,kBAACoC,GAAD,OAEF,kBAAC,IAAD,CAAU/B,GAAG,S,kWCZnB,IAAMgC,GAAcC,4BAAH,KACbC,KAmBJC,iBACE,oCACE,kBAACH,GAAD,MACA,kBAAC,IAAD,CAAUhJ,MAAOA,GACf,kBAAC,IAAD,CAAQoJ,SAAS,sBACf,kBAAC,GAAD,SAINrB,SAASsB,eAAe,W","file":"static/js/main.fdbd8624.chunk.js","sourcesContent":["import {\n  createSlice,\n  createSelector,\n  createAction,\n  PayloadAction\n} from '@reduxjs/toolkit';\nimport { Epic } from 'redux-observable';\nimport { of } from 'rxjs';\nimport { filter, mergeMap, map, catchError } from 'rxjs/operators';\nimport { RootState } from '../../app/rootReducer';\nimport { Dependencies } from '../../app/rootEpic';\n\ninterface OrderItem {\n  id: string;\n  creationDate: number;\n  modificationDate: number;\n  name: string;\n  price: number;\n  note: string;\n}\n\ninterface Order {\n  list: OrderItem[];\n}\n\nexport const addOrder = createAction<\n  Pick<OrderItem, 'name' | 'price' | 'note'>\n>('order/addOrder');\n\nexport const deleteOrder = createAction<OrderItem['id']>('order/deleteOrder');\n\nexport const updateOrder = createAction<\n  Omit<OrderItem, 'creationDate' | 'modificationDate'>\n>('order/updateOrder');\n\nexport const apiError = createAction<Error>('order/apiError');\n\nconst orderSlice = createSlice({\n  name: 'order',\n  initialState: { list: [] } as Order,\n  reducers: {\n    addOrderFulfilled: (\n      state,\n      { payload: orderItem }: PayloadAction<OrderItem>\n    ) => {\n      const { list } = state;\n\n      return { ...state, list: [...list, orderItem] };\n    },\n\n    deleteOrderFulfilled: (\n      state,\n      { payload }: PayloadAction<OrderItem['id']>\n    ) => {\n      const { list } = state;\n\n      return { ...state, list: list.filter(({ id }) => id !== payload) };\n    },\n\n    updateOrderFulfilled: (\n      state,\n      { payload: orderItem }: PayloadAction<OrderItem>\n    ) => {\n      const { list } = state;\n      const orderIdx = list.findIndex(({ id }) => orderItem.id === id);\n\n      return {\n        ...state,\n        list: [\n          ...list.slice(0, orderIdx),\n          orderItem,\n          ...list.slice(orderIdx + 1)\n        ]\n      };\n    }\n  }\n});\n\nexport const { reducer } = orderSlice;\nexport const {\n  addOrderFulfilled,\n  deleteOrderFulfilled,\n  updateOrderFulfilled\n} = orderSlice.actions;\n\nexport const addOrderEpic: Epic<\n  ReturnType<typeof addOrder>,\n  ReturnType<typeof addOrderFulfilled>,\n  RootState,\n  Dependencies\n> = (action$, _state$, { postOrderAPI }) =>\n  action$.pipe(\n    filter(addOrder.match),\n    mergeMap(action =>\n      postOrderAPI(action.payload).pipe(\n        map(addOrderFulfilled),\n        catchError(error => of(apiError(error)))\n      )\n    )\n  );\n\nexport const deleteOrderEpic: Epic<\n  ReturnType<typeof deleteOrder>,\n  ReturnType<typeof deleteOrderFulfilled>,\n  RootState,\n  Dependencies\n> = (action$, _state$, { deleteOrderAPI }) =>\n  action$.pipe(\n    filter(deleteOrder.match),\n    mergeMap(action =>\n      deleteOrderAPI(action.payload).pipe(\n        map(() => deleteOrderFulfilled(action.payload)),\n        catchError(error => of(apiError(error)))\n      )\n    )\n  );\n\nexport const updateOrderEpic: Epic<\n  ReturnType<typeof updateOrder>,\n  ReturnType<typeof updateOrderFulfilled>,\n  RootState,\n  Dependencies\n> = (action$, _state$, { patchOrderAPI }) =>\n  action$.pipe(\n    filter(updateOrder.match),\n    mergeMap(action =>\n      patchOrderAPI(action.payload).pipe(\n        map(updateOrderFulfilled),\n        catchError(error => of(apiError(error)))\n      )\n    )\n  );\n\nexport const makeOrderByIDSelector = () =>\n  createSelector(\n    [\n      (state: RootState) => state.order.list,\n      (_state: RootState, id: string) => id\n    ],\n    (orderList, id) => orderList.find(order => order.id === id)\n  );\n","import { combineReducers } from '@reduxjs/toolkit';\nimport { reducer as orderReducer } from '../features/order/orderSlice';\n\nconst rootReducer = combineReducers({ order: orderReducer });\n\nexport type RootState = ReturnType<typeof rootReducer>;\n\nexport default rootReducer;\n","import { v4 } from 'uuid';\n\ninterface OrderResource {\n  id: string;\n  creationDate: number;\n  modificationDate: number;\n  name: string;\n  price: number;\n  note: string;\n}\n\nconst orderResourceMap = new Map<string, OrderResource>();\n\nexport const postOrder = async (\n  order: Pick<OrderResource, 'name' | 'price' | 'note'>\n) => {\n  const orderID = v4();\n  const orderResource = {\n    ...order,\n    id: orderID,\n    creationDate: new Date().getTime(),\n    modificationDate: new Date().getTime()\n  };\n\n  orderResourceMap.set(orderID, orderResource);\n\n  return orderResource;\n};\n\nexport const postOrders = async (\n  orders: Pick<OrderResource, 'name' | 'price' | 'note'>[]\n) => Promise.all(orders.map(postOrder));\n\nexport const getOrder = async (orderID: string) =>\n  orderResourceMap.get(orderID)!;\n\nexport const getOrders = async () => Array.from(orderResourceMap.values());\n\nexport const patchOrder = async (\n  order: Omit<OrderResource, 'creationDate' | 'modificationDate'>\n) => {\n  const { id: orderID } = order;\n  const orderResource = orderResourceMap.get(orderID)!;\n  const modifiedOrderResource = {\n    ...orderResource,\n    ...order,\n    modificationDate: new Date().getTime()\n  };\n\n  orderResourceMap.set(orderID, modifiedOrderResource);\n\n  return modifiedOrderResource;\n};\n\nexport const patchOrders = async (\n  orders: Omit<OrderResource, 'creationDate' | 'modificationDate'>[]\n) => Promise.all(orders.map(patchOrder));\n\nexport const deleteOrder = async (orderID: string) => {\n  orderResourceMap.delete(orderID);\n};\n\nexport const deleteOrders = async (orderIDs: string[]) => {\n  await Promise.all(orderIDs.map(deleteOrder));\n};\n\nexport default {\n  postOrder,\n  postOrders,\n  getOrder,\n  getOrders,\n  patchOrder,\n  patchOrders,\n  deleteOrder,\n  deleteOrders\n};\n","import { combineEpics } from 'redux-observable';\nimport { from } from 'rxjs';\nimport {\n  addOrderEpic,\n  deleteOrderEpic,\n  updateOrderEpic\n} from '../features/order/orderSlice';\nimport { postOrder, deleteOrder, patchOrder } from '../api/orders';\n\nconst rootEpic = combineEpics(addOrderEpic, deleteOrderEpic, updateOrderEpic);\n\nexport const dependencies = {\n  postOrderAPI: (...args: Parameters<typeof postOrder>) =>\n    from(postOrder(...args)),\n  deleteOrderAPI: (...args: Parameters<typeof deleteOrder>) =>\n    from(deleteOrder(...args)),\n  patchOrderAPI: (...args: Parameters<typeof patchOrder>) =>\n    from(patchOrder(...args))\n};\n\nexport type Dependencies = typeof dependencies;\n\nexport default rootEpic;\n","const debounce = <F extends (...args: any[]) => any>(func: F, wait = 300) => {\n  let timeoutID = 0;\n\n  return ((...args: Parameters<F>) => {\n    clearTimeout(timeoutID);\n    timeoutID = setTimeout(() => func(...args), wait);\n  }) as F;\n};\n\nexport default debounce;\n","import { Middleware } from '@reduxjs/toolkit';\nimport debounce from '../utils/debounce';\n\nconst NAMESPACE = 'REDUX_LOCALSTORAGE';\n\nexport const load = (preloadedState?: object) => {\n  const persistentState: object = JSON.parse(\n    localStorage.getItem(NAMESPACE) || '{}'\n  );\n\n  if (Object.keys(persistentState).length === 0) return preloadedState;\n  return persistentState;\n};\n\nconst save = debounce((state: object) => {\n  localStorage.setItem(NAMESPACE, JSON.stringify(state));\n}, 250);\n\nexport const persistStateMiddleware: Middleware = ({\n  getState\n}) => next => action => {\n  const dispatchedAction = next(action);\n  const nextState = getState();\n\n  save(nextState);\n\n  return dispatchedAction;\n};\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport { createEpicMiddleware } from 'redux-observable';\nimport rootReducer from './rootReducer';\nimport rootEpic, { dependencies } from './rootEpic';\nimport { load, persistStateMiddleware } from './statePersistent';\n\nconst preloadedState = {\n  order: {\n    list: [\n      {\n        id: 'id-1',\n        creationDate: 1579000000000,\n        modificationDate: 1579000000000,\n        name: 'test order 1',\n        price: 999,\n        note: 'something to note 1'\n      },\n      {\n        id: 'id-2',\n        creationDate: 1579000000000,\n        modificationDate: 1579000000000,\n        name: 'test order 2',\n        price: 999,\n        note: 'something to note 2'\n      },\n      {\n        id: 'id-3',\n        creationDate: 1579000000000,\n        modificationDate: 1579000000000,\n        name: 'test order 3',\n        price: 999,\n        note: 'something to note 3'\n      }\n    ]\n  }\n};\n\nconst epicMiddleware = createEpicMiddleware({ dependencies });\n\nconst store = configureStore({\n  reducer: rootReducer,\n  preloadedState: load(preloadedState),\n  middleware: [\n    ...getDefaultMiddleware(),\n    epicMiddleware,\n    persistStateMiddleware\n  ]\n});\n\nepicMiddleware.run(rootEpic);\n\nexport default store;\n","import React, { FC } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport styled, { keyframes } from 'styled-components';\nimport { RootState } from '../../app/rootReducer';\n\nconst glowingKeyframes = keyframes`\n  0% {\n    background-position: 0 0;\n  }\n  50% {\n    background-position: 400% 0;\n  }\n  100% {\n    background-position: 0 0;\n  }\n`;\n\nconst GlowingWrapper = styled.div<{ isVisible: boolean }>`\n  position: relative;\n\n  z-index: 1;\n\n  :before {\n    content: '';\n    position: absolute;\n    top: -2px;\n    left: -2px;\n\n    width: calc(100% + 4px);\n    height: calc(100% + 4px);\n\n    background: linear-gradient(\n      45deg,\n      #ff7300,\n      #fffb00,\n      #00ffd5,\n      #ff7300,\n      #fffb00,\n      #00ffd5,\n      #ff7300,\n      #fffb00,\n      #00ffd5,\n      #ff7300,\n      #fffb00,\n      #00ffd5\n    );\n    background-size: 400%;\n    border-radius: 10px;\n\n    z-index: -1;\n    filter: blur(5px);\n\n    opacity: ${props => (props.isVisible ? 1 : 0)};\n    transition: opacity 0.3s ease-in-out;\n    animation: ${glowingKeyframes} 20s linear infinite;\n  }\n`;\n\nconst Button = styled.div`\n  padding: 20px;\n\n  border: 10px solid #f7f7f7;\n  border-radius: 5px;\n\n  box-shadow: 0 0 5px rgba(0, 0, 0, 0.1), inset 0 0 2px rgba(0, 0, 0, 0.2);\n  background: linear-gradient(to top, #efefef 0%, #ffffff 100%);\n\n  font-size: 2em;\n  text-align: center;\n\n  cursor: pointer;\n  user-select: none;\n\n  :active {\n    background: linear-gradient(to top, #ffffff 0%, #efefef 100%);\n  }\n`;\n\ninterface Props {\n  isGlowingVisible: boolean;\n  onClick: () => void;\n}\n\nexport const PureNewOrderButton: FC<Props> = ({\n  isGlowingVisible,\n  onClick\n}) => (\n  <GlowingWrapper isVisible={isGlowingVisible}>\n    <Button data-testid=\"button\" onClick={onClick}>\n      New Order\n    </Button>\n  </GlowingWrapper>\n);\n\nexport default () => {\n  const orderList = useSelector((state: RootState) => state.order.list);\n\n  const history = useHistory();\n  const handleButtonClick = () => {\n    history.push('/new');\n  };\n\n  return (\n    <PureNewOrderButton\n      isGlowingVisible={orderList.length === 0}\n      onClick={handleButtonClick}\n    />\n  );\n};\n","import React, { FC } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport styled from 'styled-components';\n\nconst Wrapper = styled.div`\n  font-size: 2em;\n\n  padding: 10px;\n  border-bottom: 1px solid #d8d8d8;\n\n  background: linear-gradient(to top, #ffffff 0%, #efefef 100%);\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.14);\n`;\n\nconst Row = styled.div`\n  height: 30px;\n  display: flex;\n\n  cursor: pointer;\n`;\n\nconst Column = styled.div<{ percent: string }>`\n  min-width: 0;\n\n  flex: 1 1 ${props => props.percent};\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  :not(:first-child) {\n    margin-left: 20px;\n  }\n`;\n\nconst TextWrapper = styled.span`\n  overflow: hidden;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n\n  line-height: 1.5;\n`;\n\ninterface PureOrderItemProps extends Props {\n  onClick: (id: string) => void;\n}\n\nexport const PureOrderItem: FC<PureOrderItemProps> = ({\n  index,\n  id,\n  name,\n  price,\n  note,\n  onClick\n}) => (\n  <>\n    <Wrapper>\n      <Row data-testid=\"row\" onClick={() => onClick(id)}>\n        <Column percent=\"10%\">\n          <TextWrapper data-testid=\"no\">{index + 1}</TextWrapper>\n        </Column>\n        <Column percent=\"30%\">\n          <TextWrapper data-testid=\"name\">{name}</TextWrapper>\n        </Column>\n        <Column percent=\"15%\">\n          <TextWrapper data-testid=\"price\">\n            {price.toLocaleString()}\n          </TextWrapper>\n        </Column>\n        <Column percent=\"45%\">\n          <TextWrapper data-testid=\"note\">{note}</TextWrapper>\n        </Column>\n      </Row>\n    </Wrapper>\n  </>\n);\n\ninterface Props {\n  index: number;\n  id: string;\n  name: string;\n  price: number;\n  note: string;\n}\n\nexport default (props => {\n  const history = useHistory();\n  const handleRowClick = (id: string) => {\n    history.push(`/order/${id}`);\n  };\n\n  return <PureOrderItem {...props} onClick={handleRowClick} />;\n}) as FC<Props>;\n","import React, { FC } from 'react';\nimport { useSelector } from 'react-redux';\nimport styled from 'styled-components';\nimport { RootState } from '../../app/rootReducer';\nimport OrderItem from './OrderItem';\n\nconst Container = styled.div`\n  margin: 0 auto;\n  width: 99%;\n`;\n\ninterface Props {\n  orderList: {\n    id: string;\n    name: string;\n    price: number;\n    note: string;\n  }[];\n}\n\nexport const PureOrderList: FC<Props> = ({ orderList }) => (\n  <Container data-testid=\"container\">\n    {orderList.map(({ id, name, price, note }, index) => (\n      <OrderItem\n        key={id}\n        index={index}\n        id={id}\n        name={name}\n        price={price}\n        note={note}\n      />\n    ))}\n  </Container>\n);\n\nexport default () => {\n  const orderList = useSelector((state: RootState) => state.order.list);\n\n  return <PureOrderList orderList={orderList} />;\n};\n","import styled from 'styled-components';\n\nconst Overlay = styled.div`\n  position: fixed;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  background-color: rgba(0, 0, 0, 0.5);\n\n  z-index: 999;\n`;\n\nexport default Overlay;\n","import styled, { css, keyframes } from 'styled-components';\n\nconst shakeKeyframes = keyframes`\n  10%, 90% {\n    transform: translate3d(-1px, 0, 0);\n  }\n  20%, 80% {\n    transform: translate3d(2px, 0, 0);\n  }\n  30%, 50%, 70% {\n    transform: translate3d(-4px, 0, 0);\n  }\n  40%, 60% {\n    transform: translate3d(4px, 0, 0);\n  }\n`;\n\nconst shakeAnimation = css`\n  animation: ${shakeKeyframes} 0.82s cubic-bezier(0.36, 0.07, 0.19, 0.97) both;\n  transform: translate3d(0, 0, 0);\n  backface-visibility: hidden;\n  perspective: 1000px;\n`;\n\nconst Container = styled.div<{ isShakeModal: boolean }>`\n  padding: 0 15px 20px;\n\n  max-width: 640px;\n  width: 80%;\n  max-height: 400px;\n\n  background-color: #fff;\n  border-radius: 4px;\n\n  ${props => (props.isShakeModal ? shakeAnimation : '')}\n`;\n\nexport default Container;\n","import styled from 'styled-components';\n\nconst ErrorMessage = styled.p`\n  color: #eb1e32;\n\n  margin: 3px 0;\n`;\n\nexport default ErrorMessage;\n","import styled, { css } from 'styled-components';\n\nconst inputStyles = css`\n  border: 1px solid #d9dadc;\n  border-radius: 0;\n\n  font-size: 1.6em;\n  line-height: 1.5;\n  color: #222326;\n\n  transition: border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;\n  transition-duration: 0.15s, 0.15s;\n  transition-timing-function: ease-in-out, ease-in-out;\n  transition-delay: 0s, 0s;\n\n  :focus {\n    border-color: #919496;\n    outline: 0;\n  }\n`;\n\nexport const Input = styled.input<{ isError: boolean }>`\n  ${inputStyles}\n\n  display: block;\n\n  width: 100%;\n  height: 40px;\n  padding: 6px 12px;\n  background-color: #fff;\n\n  ${props => (props.isError ? 'border-color: #eb1e32;' : '')}\n`;\n\nexport const TextArea = styled.textarea`\n  ${inputStyles}\n\n  width: 100%;\n  padding: 6px 12px;\n  background-color: #fff;\n\n  resize: none;\n`;\n","import styled, { css } from 'styled-components';\n\nconst buttonStyles = css`\n  display: inline-block;\n  width: 32%;\n  padding: 6px 0;\n\n  border-radius: 6px;\n\n  color: #ffffff;\n  font-size: 1.5em;\n  text-decoration: none;\n\n  cursor: pointer;\n\n  display: flex;\n  justify-content: center;\n\n  :focus {\n    outline: 0;\n  }\n`;\n\nexport const CancelButton = styled.input.attrs({ type: 'button' })`\n  ${buttonStyles}\n\n  text-shadow: 0px 1px 0px #1570cd;\n\n  border: 1px solid #337fed;\n  box-shadow: inset 0px 1px 0px 0px #97c4fe;\n\n  background: linear-gradient(to bottom, #3d94f6 5%, #1e62d0 100%);\n  background-color: #3d94f6;\n\n  :hover {\n    background: linear-gradient(to bottom, #1e62d0 5%, #3d94f6 100%);\n    background-color: #1e62d0;\n  }\n`;\n\nexport const DeleteButton = styled.input.attrs({ type: 'button' })`\n  ${buttonStyles}\n\n  text-shadow: 0px 1px 0px #810e05;\n\n  border: 1px solid #d02718;\n  box-shadow: inset 0px 1px 0px 0px #f5978e;\n\n  background: linear-gradient(to bottom, #f24537 5%, #c62d1f 100%);\n  background-color: #f24537;\n\n  :hover {\n    background: linear-gradient(to bottom, #c62d1f 5%, #f24537 100%);\n    background-color: #c62d1f;\n  }\n`;\n\nexport const SubmitButton = styled.input.attrs({ type: 'submit' })`\n  ${buttonStyles}\n\n  text-shadow: 0px 1px 0px #528009;\n\n  border: 1px solid #74b807;\n  box-shadow: inset 0px 1px 0px 0px #a4e271;\n\n  background: linear-gradient(to bottom, #89c403 5%, #77a809 100%);\n  background-color: #89c403;\n\n  :hover {\n    background: linear-gradient(to bottom, #77a809 5%, #89c403 100%);\n    background-color: #77a809;\n  }\n`;\n","import React, { useEffect, FC } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n  useParams,\n  useRouteMatch,\n  useHistory,\n  Redirect\n} from 'react-router-dom';\nimport { useForm, OnSubmit } from 'react-hook-form';\nimport styled from 'styled-components';\nimport {\n  addOrder,\n  updateOrder,\n  deleteOrder,\n  makeOrderByIDSelector\n} from '../orderSlice';\nimport { RootState } from '../../../app/rootReducer';\nimport ErrorMessage from './ErrorMessage';\nimport { Input, TextArea } from './fields';\nimport { CancelButton, DeleteButton, SubmitButton } from './buttons';\n\nconst selectOrderByID = makeOrderByIDSelector();\n\nconst Row = styled.div`\n  min-height: 57px;\n\n  margin-bottom: 2px;\n`;\n\nconst Control = styled.div`\n  margin-top: 20px;\n\n  display: flex;\n  justify-content: space-between;\n`;\n\ninterface FormValues {\n  name: string;\n  price: string;\n  note: string;\n}\n\ninterface PureOrderFormProps extends Props {\n  name: string;\n  price: number;\n  note: string;\n  isDeletable: boolean;\n  onCancel: () => void;\n  onDelete: () => void;\n  onSubmit: OnSubmit<FormValues>;\n}\n\nexport const PureOrderForm: FC<PureOrderFormProps> = ({\n  name,\n  price,\n  note,\n  isDeletable,\n  onCancel,\n  onDelete,\n  onSubmit,\n  onUserInteractedChange\n}) => {\n  const {\n    handleSubmit: makeSubmitHandler,\n    register,\n    errors,\n    formState: { dirty }\n  } = useForm<FormValues>({ mode: 'onBlur' });\n\n  useEffect(() => {\n    onUserInteractedChange(dirty);\n  }, [onUserInteractedChange, dirty]);\n\n  const handleSubmit = makeSubmitHandler(onSubmit);\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <Row>\n        <Input\n          data-testid=\"name\"\n          name=\"name\"\n          placeholder=\"訂單名稱\"\n          autoComplete=\"off\"\n          defaultValue={name}\n          onChange={({ target }) => (target.value = target.value.trimStart())}\n          onBlur={({ target }) => (target.value = target.value.trim())}\n          ref={register({ required: '請輸入訂單名稱' })}\n          isError={!!errors.name}\n        />\n        {errors.name && <ErrorMessage>{errors.name.message}</ErrorMessage>}\n      </Row>\n\n      <Row>\n        <Input\n          data-testid=\"price\"\n          name=\"price\"\n          placeholder=\"訂單金額\"\n          type=\"number\"\n          defaultValue={price || undefined}\n          ref={register({\n            required: '請輸入訂單金額',\n            min: { value: 1, message: '請輸入大於 1 的數字' },\n            max: {\n              value: 999999999,\n              message: '請輸入小於 999,999,999 的數字'\n            }\n          })}\n          isError={!!errors.price}\n        />\n        {errors.price && <ErrorMessage>{errors.price.message}</ErrorMessage>}\n      </Row>\n\n      <Row>\n        <TextArea\n          data-testid=\"note\"\n          name=\"note\"\n          placeholder=\"備註\"\n          rows={3}\n          defaultValue={note}\n          onChange={({ target }) => (target.value = target.value.trimStart())}\n          onBlur={({ target }) => (target.value = target.value.trim())}\n          ref={register}\n        />\n      </Row>\n\n      <Control>\n        <CancelButton data-testid=\"cancel\" value=\"取消\" onClick={onCancel} />\n        {isDeletable && (\n          <DeleteButton data-testid=\"delete\" value=\"刪除\" onClick={onDelete} />\n        )}\n        <SubmitButton data-testid=\"submit\" value=\"送出\" />\n      </Control>\n    </form>\n  );\n};\n\ninterface Props {\n  onUserInteractedChange: (isUserInteracted: boolean) => void;\n}\n\nexport default (({ onUserInteractedChange }) => {\n  const { orderID } = useParams();\n  const newOrderMatch = useRouteMatch({ path: '/new' });\n\n  const order = useSelector((state: RootState) =>\n    selectOrderByID(state, orderID || '')\n  );\n\n  const history = useHistory();\n  const handleClose = () => {\n    history.push('/');\n  };\n\n  const dispatch = useDispatch();\n  const handleSubmit = ({ name, price, note = '' }: FormValues) => {\n    if (orderID) {\n      dispatch(updateOrder({ id: orderID, name, price: Number(price), note }));\n    } else {\n      dispatch(addOrder({ name, price: Number(price), note }));\n    }\n    handleClose();\n  };\n\n  const handleDelete = () => {\n    if (orderID) {\n      dispatch(deleteOrder(orderID));\n    }\n    handleClose();\n  };\n\n  const { name, price, note } = order || { name: '', price: 0, note: '' };\n\n  if (!newOrderMatch && !order) {\n    return <Redirect to=\"/\" />;\n  }\n\n  return (\n    <PureOrderForm\n      name={name}\n      price={price}\n      note={note}\n      isDeletable={!!orderID}\n      onDelete={handleDelete}\n      onCancel={handleClose}\n      onSubmit={handleSubmit}\n      onUserInteractedChange={onUserInteractedChange}\n    />\n  );\n}) as FC<Props>;\n","import React, { useState, useRef, useEffect, useCallback, FC } from 'react';\nimport { createPortal } from 'react-dom';\nimport { useHistory } from 'react-router-dom';\nimport styled from 'styled-components';\nimport debounce from '../../../utils/debounce';\nimport Overlay from './Overlay';\nimport Container from './Container';\nimport ErrorMessage from './ErrorMessage';\nimport OrderForm from './OrderForm';\n\nconst TopRow = styled.div`\n  height: 20px;\n  margin: 2px 0;\n\n  display: flex;\n  align-items: center;\n`;\n\ninterface Props {\n  isUnSafeExit: boolean;\n  onOverlayClick: () => void;\n  onUserInteractedChange: (isUserInteracted: boolean) => void;\n}\n\nexport const PureOrderFormModal: FC<Props> = ({\n  isUnSafeExit,\n  onOverlayClick,\n  onUserInteractedChange\n}) => (\n  <Overlay data-testid=\"overlay\" onClick={onOverlayClick}>\n    <Container\n      onClick={event => event.stopPropagation()}\n      isShakeModal={isUnSafeExit}\n    >\n      <TopRow>\n        {isUnSafeExit && (\n          <ErrorMessage>尚未送出編輯，放棄請按「取消」</ErrorMessage>\n        )}\n      </TopRow>\n      <OrderForm onUserInteractedChange={onUserInteractedChange} />\n    </Container>\n  </Overlay>\n);\n\nexport default () => {\n  const [isUserInteracted, setIsUserInteracted] = useState(false);\n  const [isUnSafeExit, setIsUnSafeExit] = useState(false);\n\n  const isMountedRef = useRef(false);\n  const rootElemRef = useRef(document.createElement('div'));\n  useEffect(() => {\n    const { current: rootElem } = rootElemRef;\n    const { overflowY, position } = document.body.style;\n\n    isMountedRef.current = true;\n    document.body.appendChild(rootElem);\n    document.body.style.overflowY = 'hidden';\n    document.body.style.position = 'fixed';\n\n    return () => {\n      isMountedRef.current = false;\n      document.body.removeChild(rootElem);\n      document.body.style.overflowY = overflowY;\n      document.body.style.position = position;\n    };\n  }, []);\n\n  const history = useHistory();\n  const handleClose = () => {\n    history.push('/');\n  };\n\n  const setIsUnSafeExitFalse = useCallback(\n    debounce(() => {\n      if (isMountedRef.current) setIsUnSafeExit(false);\n    }, 3000),\n    []\n  );\n\n  const handleOverlayClick = () => {\n    if (isUserInteracted) {\n      setIsUnSafeExit(true);\n      setIsUnSafeExitFalse();\n    } else {\n      handleClose();\n    }\n  };\n\n  return createPortal(\n    <PureOrderFormModal\n      isUnSafeExit={isUnSafeExit}\n      onOverlayClick={handleOverlayClick}\n      onUserInteractedChange={setIsUserInteracted}\n    />,\n    rootElemRef.current\n  );\n};\n","import React, { FC } from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport styled from 'styled-components';\nimport NewOrderButton from '../features/order/NewOrderButton';\nimport OrderList from '../features/order/OrderList';\nimport OrderFormModal from '../features/order/OrderFormModal';\n\nconst Wrapper = styled.div`\n  max-width: 800px;\n  width: 90%;\n  margin: 15% auto 0;\n`;\n\nconst App: FC = () => (\n  <Wrapper>\n    <NewOrderButton />\n    <OrderList />\n    <Switch>\n      <Route path={['/new', '/order/:orderID']}>\n        <OrderFormModal />\n      </Route>\n      <Redirect to=\"/\" />\n    </Switch>\n  </Wrapper>\n);\n\nexport default App;\n","import React from 'react';\nimport { render } from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { createGlobalStyle } from 'styled-components';\nimport reset from 'styled-reset';\nimport store from './app/store';\nimport App from './app/App';\n\nconst GlobalStyle = createGlobalStyle`\n  ${reset}\n\n  html {\n    box-sizing: border-box;\n    font-size: 62.5%;\n    font-family: 'HelveticaNeue', Helvetica, Arial, 'Lucida Grande', sans-serif;\n\n    background: #fbc856;\n  }\n\n  body {\n    width: 100vw;\n  }\n\n  *, *:before, *:after {\n    box-sizing: inherit;\n  }\n`;\n\nrender(\n  <>\n    <GlobalStyle />\n    <Provider store={store}>\n      <Router basename=\"/react-order-board\">\n        <App />\n      </Router>\n    </Provider>\n  </>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}